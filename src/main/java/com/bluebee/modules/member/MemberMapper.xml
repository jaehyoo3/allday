<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bluebee.modules.member.MemberMapper">

    <resultMap id="resultMapObj" type="com.bluebee.modules.member.Member"></resultMap>
	
	<select id="selectList" resultMap="resultMapObj">
	    	<include refid="Base.selectListUpper"/>
		SELECT
			*
		<include refid="basic" />
			ORDER BY memberSeq DESC
		<include refid='Base.selectListLower'/>
	</select>
	
	<insert id="insert">
		insert into member(
		memberID
		,memberPW
		,memberNick
		,memberName
		,memberGender
		,memberEmail
		,memberMobile
		,memberDelNy
		,memberAd
		,memberGrade
		,memberRegdate
		,memberPoint
		)
		values(
		#{memberID}
		,#{memberPW}
		,#{memberNick}
		,#{memberName}
		,#{memberGender}
		,#{memberEmail}
		,#{memberMobile}
		,0
		,#{memberAd}
		,1
		,now()
		,#{memberPoint}
		)
		<selectKey resultType="String" keyProperty="memberSeq" order="AFTER"> 
			select last_insert_id()
		</selectKey>
	</insert>
	
		<select id="selectOneCount" resultType="Integer">
			SELECT COUNT(*)
			<include refid="basic" />
		</select>

		<update id="update">
		UPDATE member
		SET	
			memberID = #{memberID}
			,memberPW = #{memberPW}
			,memberNick = #{memberNick}
			,memberName = #{memberName}
			,memberDob = #{memberDob}
			,memberEmail = #{memberEmail}
			,memberMobile = #{memberMobile}
			,memberDelNy = 1
			,memberGrade = #{memberGrade}
			,memberGender = #{memberGender} 
			,memberPoint = #{memberPoint}
			,memberAd = #{memberAd}
		where
			memberSeq = #{memberSeq}
	</update>
	
	<update id="uelete">
		UPDATE 
			member
		SET
			memberDelNy = 1
		WHERE
			memberSeq = #{memberSeq}
		</update>
		
		<delete id="delete">
		delete from 
			member 
		where 
			memberSeq = #{memberSeq}
		</delete>
	<!-- 회원가입 -->
	<insert id="signup">
		insert into member(
			memberID
			,memberPW
			,memberNick
			,memberName
			,memberDob
			,memberGender
			,memberEmail
			,memberMobile
			,memberDelNy
			,memberAd
			,memberGrade
			,memberRegdate
		)
		values(
			#{memberID}
			,#{memberPW}
			,#{memberNick}
			,#{memberName}
			,#{memberDob}
			,#{memberGender}
			,#{memberEmail}
			,#{memberMobile}
			,0
			,#{memberAd}
			,1
			,now()
		)
		<selectKey resultType="String" keyProperty="memberSeq" order="AFTER"> 
			select last_insert_id()
		</selectKey>
	</insert>
		<insert id="kakaoInst">
		insert into member(
			memberID
			,memberName
			,memberGender
			,memberEmail
			,memberDelNy
			,memberAd
			,memberGrade
			,memberRegdate
		)
		values(
			#{snsId}
			,#{memberName}
			,#{memberGender}
			,#{memberEmail}
			,0
			,0
			,1
			,now()
		)
		<selectKey resultType="String" keyProperty="memberSeq" order="AFTER"> 
			select last_insert_id()
		</selectKey>
	</insert>
	
	<select id="snsLoginCheck" resultMap="resultMapObj">
		select 
			memberID
			,memberName
			,memberGender
			,memberEmail
		from member
		where 1=1 
			and memberID = #{snsId} 
			and memberName = #{memberName}
	</select>
	
	<insert id="memberaddr">
	insert into
		memberAddr(
			memberSeq
			,defaultNY
			,reciver
			,zipcode
			,addr1
			,addr2
			)
		values(
			#{memberSeq}
			,1
			,#{memberName}
			,#{zipcode}
			,#{addr1}
			,#{addr2}
		)
		<selectKey resultType="String" keyProperty="addrSeq" order="AFTER"> 
			select last_insert_id()
		</selectKey>
	</insert>
	<!-- 주문조회 -->
	<select id="orderList" resultMap="resultMapObj">
		select
			c.colorName
			,d.sizeName
			,f.productName
			,g.uuidName
			,g.path
			,g.idefaultNy
			,e.memberSeq
			,a.orderDate
			,a.orderNum
			,a.orderPrice
		from 
			purChase_Product a
		left join
			productDetail b
		ON
			a.productDetail_detailSeq = b.detailSeq
		left join
			Color c
		ON
			b.color_colorSeq = c.colorSeq
		left join
			Size d
		ON
			b.size_size = d.Size
		left join
			memberAddr e
		On
			a.memberAddr_addrSeq = e.addrSeq
		left Join
			product f
		On
			b.product_Seq =  f.productSeq
		left join
			productUploaded g
		on
			f.productSeq = g.pseq
		where 
			1=1
			and e.memberSeq = #{memberSeq}
		ORDER BY
			a.orderNum
				
	</select>
	<!-- 주문조회 e -->
	<!-- 장바구니 s -->
	<select id="basketList" resultMap="resultMapObj">
	select
		c.productName
		,c.productType
		,d.colorName
		,e.sizeName
		,a.basketNum
		,c.productPrice
		,f.path
		,f.uuidName
		,f.idefaultNy
	from
		basKets a
	left join
		productDetail b
	on
		a.productDetail_detailSeq = b.detailSeq
	left join
		product c
	on
		c.productSeq = b.product_Seq
	left join
		Color d
	on
		b.color_colorSeq = d.colorSeq
	left join
		Size e
	on
		b.size_size = e.Size
	left join
		productUploaded f
	on
		c.productSeq = f.pseq
	where
		1=1
		and a.member_memberSeq = #{memberSeq}

	</select>
	
	<!-- 장바구니 e -->
	<select id="selectOne" resultMap="resultMapObj">
		SELECT
			a.*
			,b.*
		from member a
		left join memberAddr b on a.memberSeq = b.memberSeq
		WHERE 1=1
		AND a.memberSeq = #{memberSeq}
	</select>
	
	<select id="selectOneIdCheck" resultType="Integer">
			SELECT 
				COUNT(*)
			from 
				member
			WHERE
				memberID = #{memberID}
		</select>
		
		<select id="selectOnePwCheck" resultType="Integer">
			SELECT 
				COUNT(*)
			from 
				member
			WHERE
				memberPW = #{memberPW}
		</select>
		
		<select id="selectOneNickCheck" resultType="Integer">
			SELECT 
				COUNT(*)
			from 
				member
			WHERE
				memberNick = #{memberNick}
		</select>
		
		<sql id='basic'>
		FROM member
			WHERE 1=1
		<if test="shstartDate != null and !shstartDate.equals('') and shendDate != null and !shendDate.equals('')">
			AND memberRegDate BETWEEN #{shstartDate} AND #{shendDate}
		</if>
		<if test="shDelNy != null and !shDelNy.equals('')">AND memberDelNy = #{shDelNy}</if>
		<choose>
			<when test="shOption == 1">AND memberName = #{shValue}</when>
			<when test="shOption == 2">AND memberID LIKE CONCAT('%',#{shValue},'%')</when>
			<when test="shOption == 3">AND memberNick LIKE CONCAT('%',#{shValue},'%')</when>
		</choose>
   		</sql>
   		
   		<select id="selectOneId" resultMap="resultMapObj">
   			select
   				a.memberSeq
   				,a.memberID
   			from
   				member a
   			WHERE 1=1
   				and a.memberID = #{memberID}
   		</select>    
   		
    	<select id="selectOneLogin" resultMap="resultMapObj">
    		select
    			a.memberSeq
    			,a.memberID
    			,a.memberName
    			,a.memberNick
    			,a.memberGrade
    		from
    			member a
    		where 1=1
    			and a.memberID = #{memberID}
    			<if test="memberPW != null and !memberPW.equals('')">and a.memberPW = #{memberPW}</if>
    	</select>

</mapper>		
